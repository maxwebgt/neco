import express from 'express';
import cors from 'cors';
import mongoose from 'mongoose';
import Product from './server/models/Product.js';

const app = express();

// Middleware
app.use(cors());
app.use(express.json());

// –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ MongoDB
const mongoUrl = process.env.MONGODB_URL || 'mongodb://localhost:27017/ecovery';
mongoose.connect(mongoUrl);

// API –º–∞—Ä—à—Ä—É—Ç—ã
app.get('/api/products', async (req, res) => {
    try {
        const products = await Product.find({});
        res.json(products);
    } catch (error) {
        res.status(500).json({ error: error.message });
    }
});

app.get('/api/products/featured', async (req, res) => {
    try {
        const featured = await Product.find({ 
            $or: [{ isBestseller: true }, { isNew: true }] 
        }).limit(8);
        res.json(featured);
    } catch (error) {
        res.status(500).json({ error: error.message });
    }
});

app.get('/api/categories', async (req, res) => {
    try {
        const categories = await Product.distinct('category');
        res.json(categories);
    } catch (error) {
        res.status(500).json({ error: error.message });
    }
});

const PORT = 3001;
app.listen(PORT, () => {
    console.log(`üöÄ API —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ http://localhost:${PORT}`);
    console.log(`üì° –ü–æ–¥–∫–ª—é—á–µ–Ω –∫ MongoDB`);
    console.log(`üì¶ –ú–∞—Ä—à—Ä—É—Ç—ã:`);
    console.log(`   GET /api/products - –≤—Å–µ —Ç–æ–≤–∞—Ä—ã`);
    console.log(`   GET /api/products/featured - —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–µ —Ç–æ–≤–∞—Ä—ã`);
    console.log(`   GET /api/categories - –∫–∞—Ç–µ–≥–æ—Ä–∏–∏`);
}); 