// –ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ —Ç–æ–≤–∞—Ä–æ–≤

async function testSync() {
    try {
        console.log('üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—é —Ç–æ–≤–∞—Ä–æ–≤...\n');
        
        // 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º health
        console.log('1. –ü—Ä–æ–≤–µ—Ä—è–µ–º health endpoint...');
        const healthResponse = await fetch('http://localhost:3001/api/health');
        if (!healthResponse.ok) {
            throw new Error('Server not responding');
        }
        const healthData = await healthResponse.json();
        console.log('‚úÖ Health OK:', healthData.message);
        
        // 2. –ó–∞–ø—É—Å–∫–∞–µ–º —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—é
        console.log('\n2. –ó–∞–ø—É—Å–∫–∞–µ–º —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—é —Ç–æ–≤–∞—Ä–æ–≤...');
        const syncResponse = await fetch('http://localhost:3001/api/sync', {
            method: 'POST'
        });
        
        if (!syncResponse.ok) {
            const errorData = await syncResponse.json();
            throw new Error(errorData.details || errorData.error);
        }
        
        const syncData = await syncResponse.json();
        console.log('‚úÖ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞:');
        console.log(`   - –£—Å–ø–µ—à–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ: ${syncData.results.success}`);
        console.log(`   - –û—à–∏–±–æ–∫: ${syncData.results.errors}`);
        
        if (syncData.results.processed.length > 0) {
            console.log('\nüì¶ –ü—Ä–∏–º–µ—Ä—ã –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤:');
            syncData.results.processed.slice(0, 5).forEach((item, index) => {
                if (item.status === 'success') {
                    console.log(`   ${index + 1}. ${item.name} - ${item.price}‚ÇΩ (${item.category}, ${item.images} —Ñ–æ—Ç–æ)`);
                } else {
                    console.log(`   ${index + 1}. ${item.name} - –û–®–ò–ë–ö–ê: ${item.error}`);
                }
            });
        }
        
        console.log('\nüéâ –¢–µ—Å—Ç —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –ø—Ä–æ—à–µ–ª —É—Å–ø–µ—à–Ω–æ!');
        
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:', error.message);
        
        if (error.message.includes('fetch')) {
            console.log('\nüí° –£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω: node simple-server.js');
        }
    }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç
testSync(); 