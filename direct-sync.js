import mongoose from 'mongoose';
import { parseAndSaveProducts } from './app/server/utils/productParser.js';

async function directSync() {
    try {
        console.log('üîÑ –ü—Ä—è–º–∞—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è —Ç–æ–≤–∞—Ä–æ–≤...\n');
        
        // –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ MongoDB
        console.log('üì° –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ MongoDB...');
        const mongoURI = 'mongodb://admin:ecoVery2024!@localhost:27017/ecovery?authSource=admin';
        await mongoose.connect(mongoURI);
        console.log('‚úÖ MongoDB –ø–æ–¥–∫–ª—é—á–µ–Ω —É—Å–ø–µ—à–Ω–æ\n');
        
        // –ó–∞–ø—É—Å–∫–∞–µ–º –ø–∞—Ä—Å–∏–Ω–≥ –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–æ–≤
        console.log('üöÄ –ù–∞—á–∏–Ω–∞–µ–º –ø–∞—Ä—Å–∏–Ω–≥ —Ç–æ–≤–∞—Ä–æ–≤...');
        const results = await parseAndSaveProducts();
        
        console.log('\nüéâ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!');
        console.log(`‚úÖ –£—Å–ø–µ—à–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ: ${results.success}`);
        console.log(`‚ùå –û—à–∏–±–æ–∫: ${results.errors}`);
        
        if (results.processed.length > 0) {
            console.log('\nüì¶ –û–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã:');
            results.processed.forEach((item, index) => {
                if (item.status === 'success') {
                    console.log(`   ${index + 1}. ‚úÖ ${item.name} - ${item.price}‚ÇΩ (${item.category}, ${item.images} —Ñ–æ—Ç–æ)`);
                } else {
                    console.log(`   ${index + 1}. ‚ùå ${item.name} - –û–®–ò–ë–ö–ê: ${item.error}`);
                }
            });
        }
        
        // –ó–∞–∫—Ä—ã–≤–∞–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
        await mongoose.connection.close();
        console.log('\nüì° –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ MongoDB –∑–∞–∫—Ä—ã—Ç–æ');
        
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏:', error);
        process.exit(1);
    }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä—è–º—É—é —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—é
directSync(); 